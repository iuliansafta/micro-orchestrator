services:
  # Control Plane
  orchestrator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: micro-orchestrator
    ports:
      - "50051:50051" # gRPC API
      - "8080:8080" # Metrics/Health
    environment:
      - GRPC_PORT=50051
      - METRICS_PORT=8080
      - SCHEDULING_STRATEGY=binpack
      - LOG_LEVEL=info
      - NODE_HEARTBEAT_INTERVAL=5s
      - HEALTH_CHECK_INTERVAL=10s
    networks:
      - orchestrator-net
    volumes:
      - ./config:/app/config:ro
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./deploy/prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.enable-lifecycle"
    networks:
      - orchestrator-net
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.1.5
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_SERVER_ROOT_URL=http://localhost:3000
    volumes:
      - ./deploy/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./deploy/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - orchestrator-net
    restart: unless-stopped

networks:
  orchestrator-net:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
